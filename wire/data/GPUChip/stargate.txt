//STARGATE DIAL COMPUTER MAIN DISPLAY
//Early version, expect updates
//
//How to connect:
//GPU IOBus to Data Port
//Port0 to "Open"
//Port1 to "Active"
//Port2 to "Chevron"
//
//That's all!
//
//Comments come later...

mov #65485,24; //65485 is the circle quality register
//24 means circles have 24 sides
//You can have up to 128 sides, but that LAGS
//32 sides is not even noticable comparing to 128

//= Misc decorations ==================

dcolor stargate_out_ring;
dcircle center,250;
dcolor stargate_middle_ring;
dcircle center,240;
dcolor stargate_out_ring;
dcircle center,223;

//= Rotating ring =====================
mov #65485,12;
timer eax;
dcolor stargate_inner_ring;

in ebx,1;
mul eax,ebx;

drotatescale eax,1;
dmove center;
dcircle 0,220;

drotatescale 0,1;
dmove 0;

//= Inner ring around EH ==============
mov #65485,24;
dcolor stargate_out_ring;
dcircle center,190;

//= EH ================================
dcolor stargate_eventhorizon;

in ebx,0; //Stargate active?
cmp ebx,0;
mov eax,0;
je _active;
  rand eax;
  mul eax,0.1;
  add eax,0.9;
_active:
dshade eax;
dcircle center,180;

//= Chevrons ==========================

mov eax,1; //Chevron ID
in ebx,2;
dmove center;
_chevron_loop:
  mov edx,eax; 
  mul edx,0.69815;
  sub edx,1.23333;

  drotatescale edx,1;
  dcolor stargate_chevron;

  cmp ebx,eax;
  jge _noshade;
    dshade 0.25;
  _noshade:
  dvxpoly chevron_polygon,4; //draw polygon

  inc eax;
  cmp eax,9;
  jle _chevron_loop;

//= Computer text =====================
drotatescale 0,1;
dmove 0;
//dcolor sgc_text;
//dwrite sgc_text1pos,sgc_text1;

dexit;

color sgc_text,255,255,255;

vector2f sgc_text1pos,16,490;
string sgc_text1,'VERYNICE Stargate Dial Computer 1.0';

color stargate_out_ring,    116,105, 76;
color stargate_middle_ring, 93 , 85, 60;
color stargate_inner_ring,  138,137,108;
color stargate_eventhorizon, 93,114,162;
color stargate_chevron,     250,162, 54;

vector2f center,256,256;

vector2f chevcenter,-16,-256;
vector2f chevsize,32,32;

//raw chevron poly data
//format: <x> <y>
chevron_polygon: //n=4
db -16,-251;
db 16,-251;
db 10,-230;
db -10,-230;